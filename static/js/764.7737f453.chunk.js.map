{"version":3,"file":"static/js/764.7737f453.chunk.js","mappings":"qLACA,EAAuB,mB,SCEVA,EAAO,WAoBlB,OAnBAC,EAAAA,EAAAA,YAAU,WACR,IAEE,IAAMC,EAAcC,SAASC,cAAc,YACrCC,EAASH,EAAYI,YAErBC,EADU,IACiBF,EAASG,OAAiB,EAC3DN,EAAYO,UAAYJ,EAASK,QAC/B,MACA,mBAIF,IADA,IAAIC,EAAUR,SAASS,iBAAiB,iBAC/BC,EAAI,EAAGA,EAAIF,EAAQH,OAAQK,IAClCF,EAAQE,GAAGC,MAAMC,UAAjB,iBAAuCR,EATzB,GASqDM,EAAnE,OAEM,CAAR,SAAQ,CACX,GAAE,KAGD,gBAAKG,GAAG,OAAOC,UAAWC,EAA1B,UACE,uCAGL,C,wPC1BD,GAAeC,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,kJACD,a,6GCsBEC,EAAe,CACjBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAsHd,EAnHmB,WACf,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BF,EAAAA,EAAAA,UAASN,GAArC,eAAOS,EAAP,KAAeC,EAAf,KAMMC,EAAsB,SAAAC,GACxB,MAAwBA,EAAIC,OAApBZ,EAAR,EAAQA,KAAMa,EAAd,EAAcA,MACdJ,GAAU,SAAAK,GAAI,yBAAUA,GAAV,cAAiBd,EAAOa,GAAxB,GACjB,EAEKE,EAAe,mCAAG,WAAMJ,GAAN,wEACpBA,EAAIK,iBADgB,kBAGVC,EAAAA,GAAAA,KAAe,gBAAiBT,GAHtB,uBAKVL,GACFe,EAAAA,EAAAA,GAAe,CAAEjB,MAAOO,EAAOP,MAAOC,SAAUM,EAAON,YACzDiB,SAPc,OAShBC,EAAAA,GAAAA,QAAc,gBATE,gDAWhBA,EAAAA,GAAAA,MAAY,wBAXI,yDAAH,sDAerB,OACI,UAACC,EAAA,EAAD,CAAsBC,aAAW,EAAjC,WACI,SAAC7C,EAAA,EAAD,KACA,UAAC8C,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAAK/B,UAAWC,EAAAA,EAAAA,UAArD,WACI,SAAC+B,EAAA,GAAD,KACA,iBAAKhC,UAAWC,EAAAA,EAAAA,MAAhB,WACI,SAACgC,EAAA,EAAD,CAAQjC,UAAWkC,IAAWjC,EAAAA,EAAAA,YAAiBA,EAAAA,EAAAA,QAA/C,UACI,SAACkC,EAAD,OAEJ,SAACC,EAAA,EAAD,CAAYN,UAAU,KAAKO,QAAQ,KAAnC,sBAGA,kBAAMrC,UAAWC,EAAAA,EAAAA,KAAUqC,SAAUjB,EAArC,WACI,SAACkB,EAAA,EAAD,CACIpB,MAAOL,EAAOR,KACd+B,QAAQ,WACRG,OAAO,SACPC,UAAQ,EACRC,WAAS,EACT3C,GAAG,OACH4C,MAAM,OACNrC,KAAK,OACLsC,aAAa,OACbC,WAAS,EACTC,SAAU9B,KAEd,SAACuB,EAAA,EAAD,CACIpB,MAAOL,EAAOP,MACd8B,QAAQ,WACRG,OAAO,SACPC,UAAQ,EACRC,WAAS,EACT3C,GAAG,QACH4C,MAAM,gBACNrC,KAAK,QACLsC,aAAa,QACbC,WAAS,EACTC,SAAU9B,KAEd,SAACuB,EAAA,EAAD,CACIpB,MAAOL,EAAON,SACd6B,QAAQ,WACRG,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTpC,KAAK,WACLqC,MAAM,WACNI,KAAK,WAGLhD,GAAG,WACH6C,aAAa,mBACbE,SAAU9B,EACVgC,WAAY,CACRC,cACI,SAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,UACI,SAACC,EAAA,EAAD,CACI,aAAW,6BACXC,QAlFR,WAC5BxC,GAAiBD,EACpB,EAiFuC0C,KAAK,MAHT,SAKM1C,GAAgC,SAAC2C,EAAA,EAAD,KAAjB,SAACC,EAAA,EAAD,YAMrC,SAACC,EAAA,EAAD,CACIV,KAAK,SACLL,WAAS,EACTL,QAAQ,YACRqB,MAAM,UACN1D,UAAWC,EAAAA,EAAAA,OALf,sBASA,SAAC0D,EAAA,EAAD,CAAMC,KAAK,sCAAsCvB,QAAQ,QAAzD,gEAQvB,C,qBChJD,KAAgB,UAAY,8BAA8B,MAAQ,0BAA0B,YAAc,gCAAgC,OAAS,2BAA2B,QAAU,4BAA4B,KAAO,yBAAyB,OAAS,2B","sources":["webpack://react-homework-template/./src/components/Logo/Logo.module.css?6a46","components/Logo/Logo.jsx","../node_modules/@mui/icons-material/esm/PersonAdd.js","pages/SignUpPage/SignUpPage.jsx","webpack://react-homework-template/./src/pages/SignUpPage/SignUpPage.module.css?2000"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"logo\":\"Logo_logo__vDBPO\"};","import { useEffect } from 'react';\nimport css from'./Logo.module.css'\n\nexport const Logo = () => {\n  useEffect(() => {\n    try {\n\n      const logoTextRef = document.querySelector('#logo>h1');\n      const logoText=logoTextRef.textContent\n      const stepAngle=12;\n      const startWritingAnglePosition=-logoText.length*stepAngle/2\n      logoTextRef.innerHTML = logoText.replace(\n        /\\S/g,\n        '<span>$&</span>'\n      );\n\n      let element = document.querySelectorAll('#logo>h1 span');\n      for (let i = 0; i < element.length; i++) {\n        element[i].style.transform = `rotate(${startWritingAnglePosition + i * stepAngle}deg)`;\n      }\n    } catch {}\n  }, []);\n\n  return (\n    <div id='logo' className={css.logo}>\n      <h1>Phonebook</h1>\n    </div>\n  );\n};","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm-9-2V7H4v3H1v2h3v3h2v-3h3v-2H6zm9 4c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'PersonAdd');","import {\n    Avatar,\n    Button,\n    Container,\n    CssBaseline,\n    IconButton,\n    InputAdornment,\n    Link,\n    // IconButton,\n    // InputAdornment,\n    TextField,\n    Typography,\n} from '@mui/material';\nimport { StyledEngineProvider } from '@mui/material/styles';\nimport { PersonAdd, Visibility, VisibilityOff } from '@mui/icons-material';\n// import { Visibility, VisibilityOff } from '@mui/icons-material';\nimport { useState } from 'react';\nimport { Logo } from 'components/Logo/Logo';\nimport { toast } from 'react-toastify';\nimport classNames from 'classnames';\nimport { useDispatch } from 'react-redux';\nimport { authLoginThunk } from 'redux/auth/authThunk';\nimport { publicApi } from 'http/http';\n\nimport css from './SignUpPage.module.css';\n\nconst initialState = {\n    name: '',\n    email: '',\n    password: '',\n};\n\nconst SignUpPage = () => {\n    const dispatch = useDispatch();\n    const [showPassword, setshowPassword] = useState(false);\n    const [values, setValues] = useState(initialState);\n\n    const handleClickShowPassword = () => {\n        setshowPassword(!showPassword);\n    };\n\n    const onCangeInputHandler = evt => {\n        const { name, value } = evt.target;\n        setValues(prev => ({ ...prev, [name]: value }));\n    };\n\n    const onSubmitHandler = async evt => {\n        evt.preventDefault();\n        try {\n            await publicApi.post('/users/signup', values);\n\n            await dispatch(\n                authLoginThunk({ email: values.email, password: values.password })\n            ).unwrap();\n\n            toast.success('User created');\n        } catch (error) {\n            toast.error('something went wrong');\n        }\n    };\n\n    return (\n        <StyledEngineProvider injectFirst>\n            <Logo />\n            <Container component=\"main\" maxWidth=\"xs\" className={css.container}>\n                <CssBaseline />\n                <div className={css.paper}>\n                    <Avatar className={classNames(css.loginAvatar, css.closed)}>\n                        <PersonAdd />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Sign Up\n                    </Typography>\n                    <form className={css.form} onSubmit={onSubmitHandler}>\n                        <TextField\n                            value={values.name}\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"name\"\n                            label=\"Name\"\n                            name=\"name\"\n                            autoComplete=\"name\"\n                            autoFocus\n                            onChange={onCangeInputHandler}\n                        />\n                        <TextField\n                            value={values.email}\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email Address\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            autoFocus\n                            onChange={onCangeInputHandler}\n                        />\n                        <TextField\n                            value={values.password}\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            // type={showPassword ? 'text' : 'password'}\n\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                            onChange={onCangeInputHandler}\n                            InputProps={{\n                                endAdornment: (\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={handleClickShowPassword}\n                                            edge=\"end\"\n                                        >\n                                            {!showPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={css.submit}\n                        >\n                            Sign Up\n                        </Button>\n                        <Link href=\"/goit-react-hw-08-phonebook/sign_in\" variant=\"body1\">\n                            Do you already have an account? Sign In\n                        </Link>\n                    </form>\n                </div>\n            </Container>\n        </StyledEngineProvider>\n    );\n};\n\nexport default SignUpPage;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"SignUpPage_container__A1kU5\",\"paper\":\"SignUpPage_paper__xkMuI\",\"loginAvatar\":\"SignUpPage_loginAvatar__T7h0H\",\"closed\":\"SignUpPage_closed__UYN+j\",\"success\":\"SignUpPage_success__78x+J\",\"form\":\"SignUpPage_form__r8QOu\",\"submit\":\"SignUpPage_submit__xxNcm\"};"],"names":["Logo","useEffect","logoTextRef","document","querySelector","logoText","textContent","startWritingAnglePosition","length","innerHTML","replace","element","querySelectorAll","i","style","transform","id","className","css","createSvgIcon","_jsx","d","initialState","name","email","password","dispatch","useDispatch","useState","showPassword","setshowPassword","values","setValues","onCangeInputHandler","evt","target","value","prev","onSubmitHandler","preventDefault","publicApi","authLoginThunk","unwrap","toast","StyledEngineProvider","injectFirst","Container","component","maxWidth","CssBaseline","Avatar","classNames","PersonAdd","Typography","variant","onSubmit","TextField","margin","required","fullWidth","label","autoComplete","autoFocus","onChange","type","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","edge","VisibilityOff","Visibility","Button","color","Link","href"],"sourceRoot":""}