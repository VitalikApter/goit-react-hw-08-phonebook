{"version":3,"file":"static/js/151.76165889.chunk.js","mappings":"oLACA,MAA4B,6BAA5B,EAAiE,yBCAjE,GAAgB,aAAe,oCCA/B,GAAgB,SAAW,2B,uCC8B3B,EAzBoB,SAAC,GAAyB,IAAvBA,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACzBC,GAAWC,EAAAA,EAAAA,MAEXC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IAK9B,OACE,gBAAIC,UAAWC,EAAAA,GAAf,WACE,yBACGR,EADH,KACWC,MAEX,mBACEM,UAAWC,EAAAA,OACXC,KAAK,SACLC,QAAS,kBAZE,SAAAX,GACfG,GAASS,EAAAA,EAAAA,IAAcZ,GACxB,CAUoBa,CAASb,EAAf,EACTc,SAAUT,EAJZ,sBAUL,ECZD,EAXqB,WACnB,IAAMU,GAAmBT,EAAAA,EAAAA,IAAYU,EAAAA,IACrC,OACE,eAAIR,UAAWC,EAAAA,SAAf,SACGM,EAAiBE,KAAI,YAA2B,IAAxBjB,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,KAAMiB,EAAa,EAAbA,OACjC,OAAO,SAACC,EAAD,CAAkBlB,KAAMA,EAAMC,MAAOgB,EAAQlB,GAAIA,GAAnCA,EACtB,KAGN,ECdD,GAAgB,UAAY,iCAAiC,WAAa,kCAAkC,WAAa,kCAAkC,UAAY,kC,UCqCvK,EAhCgB,WACd,IAAMG,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IAW9B,OACE,SAAC,KAAD,CAAQa,cAXY,CACpBnB,KAAM,GACNiB,OAAQ,IAS8BG,SANf,SAACC,EAAD,GAA6B,IAAjBC,EAAgB,EAAhBA,UACnCpB,GAASqB,EAAAA,EAAAA,IAAWF,IACpBC,GACD,EAGC,UACE,UAAC,KAAD,CAAMf,UAAWC,EAAAA,UAAjB,WACE,8BACE,iCACA,SAAC,KAAD,CAAOC,KAAK,OAAOT,KAAK,aAE1B,8BACE,mCACA,SAAC,KAAD,CAAOS,KAAK,MAAMT,KAAK,eAEzB,mBAAQO,UAAWC,EAAAA,OAAYC,KAAK,SAASI,SAAUT,EAAvD,6BAMP,E,UCRC,EAxBa,WACb,IAAMF,GAAWC,EAAAA,EAAAA,MACXqB,GAASnB,EAAAA,EAAAA,IAAYoB,EAAAA,IAMzB,OACE,8BACE,kDACA,kBACEhB,KAAK,OACLT,KAAK,OACL0B,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,MAAOL,EACPM,SAda,SAAAC,GACnB7B,GAAS8B,EAAAA,EAAAA,GAAaD,EAAME,cAAcJ,OAC3C,MAgBA,E,UClBY,SAASK,IACtB,IAAMhC,GAAWC,EAAAA,EAAAA,MAKjB,OAHAgC,EAAAA,EAAAA,YAAU,WACRjC,GAASkC,EAAAA,EAAAA,MACV,GAAE,CAAClC,KAEA,iBAAKK,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,wBACA,SAAC,EAAD,KACA,eAAKD,UAAWC,EAAhB,uBACA,SAAC,EAAD,KACA,SAAC,EAAD,MAGP,CCrBD,IAIA,EAJsB,WACpB,OAAO,SAAC0B,EAAD,GACR,C","sources":["webpack://react-homework-template/./src/components/PhoneApp/Phonebook.module.css?5122","webpack://react-homework-template/./src/components/ContactsList/ContactsList.module.css?d8e9","webpack://react-homework-template/./src/components/ContactsList/Contact/Contact.module.css?f695","components/ContactsList/Contact/Contact.jsx","components/ContactsList/ContactsList.jsx","webpack://react-homework-template/./src/components/PhoneBookForm/PhoneBookForm.module.css?a78a","components/PhoneBookForm/PhoneBookForm.jsx","components/Filter/Filter.jsx","components/PhoneApp/PhoneApp.jsx","pages/PhonebookPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Phonebook_container__Tg-uA\",\"title\":\"Phonebook_title__HUxZX\"};","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"ContactsList_contactsList__ZQI1L\"};","// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"Contact_listItem__I13kG\"};","import css from './Contact.module.css';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contactsOperations';\nimport { getIsLoading } from '../../../redux/selectors';\n\nconst ContactItem = ({ id, name, phone }) => {\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(getIsLoading);\n  const onDelete = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <li className={css.li}>\n      <p>\n        {name}: {phone}\n      </p>\n      <button\n        className={css.button}\n        type=\"button\"\n        onClick={() => onDelete(id)}\n        disabled={isLoading}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};","import css from './ContactsList.module.css';\nimport Contact  from './Contact/Contact';\nimport { useSelector } from 'react-redux';\nimport { getFilteredContacts } from '../../redux/selectors';\n\n\nconst ContactsList = () => {\n  const filteredContacts = useSelector(getFilteredContacts);\n  return (\n    <ul className={css.contacts}>\n      {filteredContacts.map(({ id, name, number }) => {\n        return <Contact key={id} name={name} phone={number} id={id} />;\n      })}\n    </ul>\n  );\n};\n\nexport default ContactsList;","// extracted by mini-css-extract-plugin\nexport default {\"formStyle\":\"PhoneBookForm_formStyle__ObfAZ\",\"labelStyle\":\"PhoneBookForm_labelStyle__c022z\",\"inputStyle\":\"PhoneBookForm_inputStyle__JE91k\",\"addButton\":\"PhoneBookForm_addButton__XBeL1\"};","import css from './PhoneBookForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contactsOperations';\nimport { Formik, Form, Field } from 'formik';\nimport { getIsLoading } from 'redux/selectors';\n\nconst AddForm = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const initialValues = {\n    name: '',\n    number: '',\n  };\n\n  const handleFormSubmit = (contact, { resetForm }) => {\n    dispatch(addContact(contact));\n    resetForm();\n  };\n\n  return (\n    <Formik initialValues={initialValues} onSubmit={handleFormSubmit}>\n      <Form className={css.phonebook}>\n        <label>\n          <p>Name</p>\n          <Field type=\"text\" name=\"name\" />\n        </label>\n        <label>\n          <p>Number</p>\n          <Field type=\"tel\" name=\"number\" />\n        </label>\n        <button className={css.button} type=\"submit\" disabled={isLoading}>\n          Add contact\n        </button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default AddForm;","import { useSelector, useDispatch } from 'react-redux';\nimport { filterChange } from 'redux/filtersSlice';\nimport { getFilter } from 'redux/selectors';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const handleFilter = event => {\n    dispatch(filterChange(event.currentTarget.value));\n  };\n\n    return (\n      <label>\n        <p>Find contacts by name</p>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={filter}\n          onChange={handleFilter}\n        />\n      </label>\n    );\n  };\n  \n  export default Filter;","import css from './Phonebook.module.css';\nimport  ContactsList  from 'components/ContactsList/ContactsList';\nimport AddForm from 'components/PhoneBookForm/PhoneBookForm';\nimport Filter  from 'components/Filter/Filter';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contactsOperations';\n\nexport default function PhoneApp() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n      <div className={css.container}>\n        <h1 className={css.title}>Phonebook</h1>\n        <AddForm />\n        <h2  className={css.title}>Contacts</h2>\n        <Filter />\n        <ContactsList />\n      </div>\n  );\n}\n\n","import PhoneApp from \"components/PhoneApp/PhoneApp\";\n\nconst PhonebookPage = () => {\n  return <PhoneApp />;\n};\n\nexport default PhonebookPage;"],"names":["id","name","phone","dispatch","useDispatch","isLoading","useSelector","getIsLoading","className","css","type","onClick","deleteContact","onDelete","disabled","filteredContacts","getFilteredContacts","map","number","Contact","initialValues","onSubmit","contact","resetForm","addContact","filter","getFilter","pattern","title","required","value","onChange","event","filterChange","currentTarget","PhoneApp","useEffect","fetchContacts"],"sourceRoot":""}